{
    "contents" : "\netas <- function(object, param0=NULL, bwd = NULL, nnp = 5, bwm = 0.05,\n                 verbose = TRUE, plot.it = FALSE, no.itr = 11)\n{\n  spatstat::verifyclass(object, \"catalog\")\n  revents <-  object$revents\n  rpoly <-    object$rpoly\n  rtperiod <- object$rtperiod\n  m0 <- object$mag.threshold\n  win <- object$region.win\n\n  # initial prameter values\n  if (is.null(param0))\n  {\n    param0 <- c(mu=0.5, A=0.2, c=0.01, alpha=2, p=1.1, D=0.002, q=1.5, gamma=0.6)\n    cat(\"using non-informative initial parameter values:\\n\")\n    print(param0)\n    warning(\"the algorithm is very sensitive to the choice of starting point\")\n  }\n  # bandwidths for smoothness and integration\n  if (is.null(bwd))\n  {\n    rbwd <- spatstat::nndist.default(revents[, 2], revents[, 3], k=nnp)\n    rbwd <- pmax(rbwd, bwm)\n  }\n  else\n  {\n    stopifnot(is.numeric(bwd), length(bwd) != nrow(revents))\n    rbwd <- bwd\n  }\n\n  # check initial values for the model parameters\n  if (!is.numeric(param0) || length(param0) != 8 || any(param0 < 0))\n    stop(\"param0 must be a numeric vector of length 8 with positive components\")\n\n  param1 <- param0\n  names(param1) <- c(\"mu\", \"A\", \"c\", \"alpha\", \"p\", \"D\", \"q\", \"gamma\")\n  thetar <- matrix(NA, nrow=no.itr, ncol=8)\n\n  for (itr in 1:no.itr)\n  {\n    bkg <- decluster(param1, rbwd, revents, rpoly, rtperiod)\n    revents <- bkg$revents\n    integ0 <- bkg$integ0\n    bk <- revents[,6]\n    pb <- revents[,7]\n    if (verbose)\n    {\n      cat(\"iteration: \", itr, \"\\n\")\n      cat(\"======================================================\\n\")\n      cat(\"background seismicity rate:\\n\")\n      print(summary(bk))\n      cat(\"probability of being a background event:\\n\")\n      print(summary(pb))\n      cat(\"integral of background seismicity rate: \", integ0, \"\\n\")\n      cat(\"======================================================\\n\")\n    }\n    if (plot.it)\n    {\n      par(mfrow=c(1, 2), mar=c(4, 4, 3, 1))\n      cols <- ifelse(pb < 0.5, \"red\", \"blue\")\n      plot(object$longlat$long, object$longlat$lat,\n           cex = 0.05 + 2.5 * revents[, 4]/m0, col=cols,\n           main=paste(\"iteration: \", itr), xlab=\"long\", ylab=\"lat\")\n      polygon(object$region.poly$long, object$region.poly$lat, border=3)\n      plot(revents[,1], pb, xlab=\"time\",\n           ylab=\"probability of being a background event\")\n      rates0 <- rates(param1, object, rbwd, plot.it=plot.it)\n    }\n    opt <- etasfit(param1, revents, rpoly, rtperiod, integ0, verbose)\n    thetar[itr,] <- opt$estimate\n    param1 <- thetar[itr,]\n    if (verbose)\n    {\n      cat(\"======================================================\\n\")\n      cat(\"MLE:\\n\")\n      print(param1)\n      cat(\"======================================================\\n\")\n    }\n  }\n\n  rates0 <- rates(param1, object, rbwd, plot.it=plot.it)\n  names(param1) <- c(\"mu\", \"A\", \"c\", \"alpha\", \"p\", \"D\", \"q\", \"gamma\")\n  out <- list(param = param1, bk=bk, pb=pb, opt=opt, rates=rates0)\n  class(out) <- \"etas\"\n  return(out)\n}\n\n\nprint.etas <- function (x, ...)\n{\n  cat(\"ETAS model: fitted using iterative stochastic declustering method\\n\")\n  cat(\"ML estimates of model parameters:\\n\")\n  print(x$param)\n  cat(\"log-likelihood: \", x$opt$loglik, \"\\nAIC: \", x$opt$aic, \"\\n\")\n}\n",
    "created" : 1451986222507.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1772894127",
    "id" : "71812117",
    "lastKnownWriteTime" : 1452075858,
    "path" : "~/Dropbox/RCodes/RpkgETAS/ETAS/R/etas.R",
    "project_path" : "R/etas.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}